/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  GamblyTest,
  GamblyTestInterface,
} from "../../contracts/GamblyTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenInfo",
    outputs: [
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "currentSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSupply",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001223380380620012238339810160408190526200003491620002b4565b806040518060400160405280600a81526020016911d85b589b1e55195cdd60b21b81525060405180604001604052806004815260200163151154d560e21b81525081600390816200008691906200038b565b5060046200009582826200038b565b5050506001600160a01b038116620000c857604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000d381620000f1565b50620000ea8169d3c21bcecceda100000062000143565b506200047f565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200016f5760405163ec442f0560e01b815260006004820152602401620000bf565b6200017d6000838362000181565b5050565b6001600160a01b038316620001b0578060026000828254620001a4919062000457565b90915550620002249050565b6001600160a01b03831660009081526020819052604090205481811015620002055760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000bf565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620002425760028054829003905562000261565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002a791815260200190565b60405180910390a3505050565b600060208284031215620002c757600080fd5b81516001600160a01b0381168114620002df57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200031157607f821691505b6020821081036200033257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038657600081815260208120601f850160051c81016020861015620003615750805b601f850160051c820191505b8181101562000382578281556001016200036d565b5050505b505050565b81516001600160401b03811115620003a757620003a7620002e6565b620003bf81620003b88454620002fc565b8462000338565b602080601f831160018114620003f75760008415620003de5750858301515b600019600386901b1c1916600185901b17855562000382565b600085815260208120601f198616915b82811015620004285788860151825594840194600190910190840162000407565b5085821015620004475787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200047957634e487b7160e01b600052601160045260246000fd5b92915050565b610d94806200048f6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806368573107116100ad57806395d89b411161007157806395d89b4114610258578063a9059cbb14610260578063abb1dc4414610273578063dd62ed3e1461028c578063f2fde38b146102c557600080fd5b806368573107146101e657806370a08231146101f9578063715018a61461022257806379cc67901461022a5780638da5cb5b1461023d57600080fd5b80632ff2e9dc116100f45780632ff2e9dc1461018c578063313ce5671461019d57806332cb6b0c146101ac57806340c10f19146101be57806342966c68146101d357600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102d8565b60405161013b9190610acb565b60405180910390f35b610157610152366004610b01565b61036a565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610b2b565b610384565b61016b69d3c21bcecceda100000081565b6040516012815260200161013b565b61016b6a084595161401484a00000081565b6101d16101cc366004610b01565b6103a8565b005b6101d16101e1366004610b67565b610431565b6101d16101f4366004610bcc565b61043e565b61016b610207366004610c38565b6001600160a01b031660009081526020819052604090205490565b6101d16105c0565b6101d1610238366004610b01565b6105d4565b6005546040516001600160a01b03909116815260200161013b565b61012e6105e9565b61015761026e366004610b01565b6105f8565b61027b610606565b60405161013b959493929190610c53565b61016b61029a366004610c99565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101d16102d3366004610c38565b610670565b6060600380546102e790610ccc565b80601f016020809104026020016040519081016040528092919081815260200182805461031390610ccc565b80156103605780601f1061033557610100808354040283529160200191610360565b820191906000526020600020905b81548152906001019060200180831161034357829003601f168201915b5050505050905090565b6000336103788185856106ab565b60019150505b92915050565b6000336103928582856106bd565b61039d85858561073c565b506001949350505050565b6103b061079b565b6a084595161401484a000000816103c660025490565b6103d09190610d1c565b11156104235760405162461bcd60e51b815260206004820152601f60248201527f47616d626c79546573743a204d617820737570706c792065786365656465640060448201526064015b60405180910390fd5b61042d82826107c8565b5050565b61043b33826107fe565b50565b61044661079b565b8281146104a05760405162461bcd60e51b815260206004820152602260248201527f47616d626c79546573743a20417272617973206c656e677468206d69736d61746044820152610c6d60f31b606482015260840161041a565b6000805b828110156104e4578383828181106104be576104be610d2f565b90506020020135826104d09190610d1c565b9150806104dc81610d45565b9150506104a4565b506a084595161401484a000000816104fb60025490565b6105059190610d1c565b11156105535760405162461bcd60e51b815260206004820152601f60248201527f47616d626c79546573743a204d617820737570706c7920657863656564656400604482015260640161041a565b60005b848110156105b8576105a686868381811061057357610573610d2f565b90506020020160208101906105889190610c38565b85858481811061059a5761059a610d2f565b905060200201356107c8565b806105b081610d45565b915050610556565b505050505050565b6105c861079b565b6105d26000610834565b565b6105df8233836106bd565b61042d82826107fe565b6060600480546102e790610ccc565b60003361037881858561073c565b6060806000806000601261061960025490565b604080518082018252600a81526911d85b589b1e55195cdd60b21b60208083019190915282518084019093526004835263151154d560e21b908301529890975091955093506a084595161401484a00000092509050565b61067861079b565b6001600160a01b0381166106a257604051631e4fbdf760e01b81526000600482015260240161041a565b61043b81610834565b6106b88383836001610886565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811015610736578181101561072757604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161041a565b61073684848484036000610886565b50505050565b6001600160a01b03831661076657604051634b637e8f60e11b81526000600482015260240161041a565b6001600160a01b0382166107905760405163ec442f0560e01b81526000600482015260240161041a565b6106b883838361095b565b6005546001600160a01b031633146105d25760405163118cdaa760e01b815233600482015260240161041a565b6001600160a01b0382166107f25760405163ec442f0560e01b81526000600482015260240161041a565b61042d6000838361095b565b6001600160a01b03821661082857604051634b637e8f60e11b81526000600482015260240161041a565b61042d8260008361095b565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166108b05760405163e602df0560e01b81526000600482015260240161041a565b6001600160a01b0383166108da57604051634a1406b160e11b81526000600482015260240161041a565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561073657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161094d91815260200190565b60405180910390a350505050565b6001600160a01b03831661098657806002600082825461097b9190610d1c565b909155506109f89050565b6001600160a01b038316600090815260208190526040902054818110156109d95760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161041a565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610a1457600280548290039055610a33565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a7891815260200190565b60405180910390a3505050565b6000815180845260005b81811015610aab57602081850181015186830182015201610a8f565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ade6020830184610a85565b9392505050565b80356001600160a01b0381168114610afc57600080fd5b919050565b60008060408385031215610b1457600080fd5b610b1d83610ae5565b946020939093013593505050565b600080600060608486031215610b4057600080fd5b610b4984610ae5565b9250610b5760208501610ae5565b9150604084013590509250925092565b600060208284031215610b7957600080fd5b5035919050565b60008083601f840112610b9257600080fd5b50813567ffffffffffffffff811115610baa57600080fd5b6020830191508360208260051b8501011115610bc557600080fd5b9250929050565b60008060008060408587031215610be257600080fd5b843567ffffffffffffffff80821115610bfa57600080fd5b610c0688838901610b80565b90965094506020870135915080821115610c1f57600080fd5b50610c2c87828801610b80565b95989497509550505050565b600060208284031215610c4a57600080fd5b610ade82610ae5565b60a081526000610c6660a0830188610a85565b8281036020840152610c788188610a85565b60ff9690961660408401525050606081019290925260809091015292915050565b60008060408385031215610cac57600080fd5b610cb583610ae5565b9150610cc360208401610ae5565b90509250929050565b600181811c90821680610ce057607f821691505b602082108103610d0057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561037e5761037e610d06565b634e487b7160e01b600052603260045260246000fd5b600060018201610d5757610d57610d06565b506001019056fea2646970667358221220cff756a281ecb31065541810996d1b275c11a765a3c6bef1bd5154692fd39bf864736f6c63430008140033";

type GamblyTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GamblyTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GamblyTest__factory extends ContractFactory {
  constructor(...args: GamblyTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      GamblyTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GamblyTest__factory {
    return super.connect(runner) as GamblyTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GamblyTestInterface {
    return new Interface(_abi) as GamblyTestInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GamblyTest {
    return new Contract(address, _abi, runner) as unknown as GamblyTest;
  }
}
